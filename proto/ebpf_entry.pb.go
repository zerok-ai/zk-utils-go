// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.24.3
// source: ebpf_entry.proto

package __

import (
	v1 "go.opentelemetry.io/proto/otlp/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is the data that is sent from the ebpf collector to the otlp receiver.
type EbpfEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId  string `protobuf:"bytes,2,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	// This is the data of type EbpfEntryDataForSpan, but proto marshalled.
	EbpfData []byte `protobuf:"bytes,3,opt,name=ebpf_data,json=ebpfData,proto3" json:"ebpf_data,omitempty"`
}

func (x *EbpfEntryResponse) Reset() {
	*x = EbpfEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ebpf_entry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EbpfEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EbpfEntryResponse) ProtoMessage() {}

func (x *EbpfEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebpf_entry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EbpfEntryResponse.ProtoReflect.Descriptor instead.
func (*EbpfEntryResponse) Descriptor() ([]byte, []int) {
	return file_ebpf_entry_proto_rawDescGZIP(), []int{0}
}

func (x *EbpfEntryResponse) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *EbpfEntryResponse) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

func (x *EbpfEntryResponse) GetEbpfData() []byte {
	if x != nil {
		return x.EbpfData
	}
	return nil
}

type EbpfEntryDataForSpan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentType  string           `protobuf:"bytes,1,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	ReqHeaders   *v1.KeyValueList `protobuf:"bytes,2,opt,name=req_headers,json=reqHeaders,proto3" json:"req_headers,omitempty"`
	ReqMethod    string           `protobuf:"bytes,3,opt,name=req_method,json=reqMethod,proto3" json:"req_method,omitempty"`
	ReqPath      string           `protobuf:"bytes,4,opt,name=req_path,json=reqPath,proto3" json:"req_path,omitempty"`
	ReqBodySize  string           `protobuf:"bytes,5,opt,name=req_body_size,json=reqBodySize,proto3" json:"req_body_size,omitempty"`
	ReqBody      string           `protobuf:"bytes,6,opt,name=req_body,json=reqBody,proto3" json:"req_body,omitempty"`
	RespHeaders  *v1.KeyValueList `protobuf:"bytes,7,opt,name=resp_headers,json=respHeaders,proto3" json:"resp_headers,omitempty"`
	RespStatus   string           `protobuf:"bytes,8,opt,name=resp_status,json=respStatus,proto3" json:"resp_status,omitempty"`
	RespMessage  string           `protobuf:"bytes,9,opt,name=resp_message,json=respMessage,proto3" json:"resp_message,omitempty"`
	RespBodySize string           `protobuf:"bytes,10,opt,name=resp_body_size,json=respBodySize,proto3" json:"resp_body_size,omitempty"`
	RespBody     string           `protobuf:"bytes,11,opt,name=resp_body,json=respBody,proto3" json:"resp_body,omitempty"`
}

func (x *EbpfEntryDataForSpan) Reset() {
	*x = EbpfEntryDataForSpan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ebpf_entry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EbpfEntryDataForSpan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EbpfEntryDataForSpan) ProtoMessage() {}

func (x *EbpfEntryDataForSpan) ProtoReflect() protoreflect.Message {
	mi := &file_ebpf_entry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EbpfEntryDataForSpan.ProtoReflect.Descriptor instead.
func (*EbpfEntryDataForSpan) Descriptor() ([]byte, []int) {
	return file_ebpf_entry_proto_rawDescGZIP(), []int{1}
}

func (x *EbpfEntryDataForSpan) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *EbpfEntryDataForSpan) GetReqHeaders() *v1.KeyValueList {
	if x != nil {
		return x.ReqHeaders
	}
	return nil
}

func (x *EbpfEntryDataForSpan) GetReqMethod() string {
	if x != nil {
		return x.ReqMethod
	}
	return ""
}

func (x *EbpfEntryDataForSpan) GetReqPath() string {
	if x != nil {
		return x.ReqPath
	}
	return ""
}

func (x *EbpfEntryDataForSpan) GetReqBodySize() string {
	if x != nil {
		return x.ReqBodySize
	}
	return ""
}

func (x *EbpfEntryDataForSpan) GetReqBody() string {
	if x != nil {
		return x.ReqBody
	}
	return ""
}

func (x *EbpfEntryDataForSpan) GetRespHeaders() *v1.KeyValueList {
	if x != nil {
		return x.RespHeaders
	}
	return nil
}

func (x *EbpfEntryDataForSpan) GetRespStatus() string {
	if x != nil {
		return x.RespStatus
	}
	return ""
}

func (x *EbpfEntryDataForSpan) GetRespMessage() string {
	if x != nil {
		return x.RespMessage
	}
	return ""
}

func (x *EbpfEntryDataForSpan) GetRespBodySize() string {
	if x != nil {
		return x.RespBodySize
	}
	return ""
}

func (x *EbpfEntryDataForSpan) GetRespBody() string {
	if x != nil {
		return x.RespBody
	}
	return ""
}

var File_ebpf_entry_proto protoreflect.FileDescriptor

var file_ebpf_entry_proto_rawDesc = []byte{
	0x0a, 0x10, 0x65, 0x62, 0x70, 0x66, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x6f, 0x70, 0x65, 0x6e, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x64, 0x0a, 0x11, 0x45, 0x62, 0x70, 0x66, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x70, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x62, 0x70, 0x66,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x62, 0x70,
	0x66, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd7, 0x03, 0x0a, 0x14, 0x45, 0x62, 0x70, 0x66, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x53, 0x70, 0x61, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x71,
	0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x4e, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x73,
	0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x70,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73,
	0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x73, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x42,
	0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ebpf_entry_proto_rawDescOnce sync.Once
	file_ebpf_entry_proto_rawDescData = file_ebpf_entry_proto_rawDesc
)

func file_ebpf_entry_proto_rawDescGZIP() []byte {
	file_ebpf_entry_proto_rawDescOnce.Do(func() {
		file_ebpf_entry_proto_rawDescData = protoimpl.X.CompressGZIP(file_ebpf_entry_proto_rawDescData)
	})
	return file_ebpf_entry_proto_rawDescData
}

var file_ebpf_entry_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ebpf_entry_proto_goTypes = []interface{}{
	(*EbpfEntryResponse)(nil),    // 0: proto.EbpfEntryResponse
	(*EbpfEntryDataForSpan)(nil), // 1: proto.EbpfEntryDataForSpan
	(*v1.KeyValueList)(nil),      // 2: opentelemetry.proto.common.v1.KeyValueList
}
var file_ebpf_entry_proto_depIdxs = []int32{
	2, // 0: proto.EbpfEntryDataForSpan.req_headers:type_name -> opentelemetry.proto.common.v1.KeyValueList
	2, // 1: proto.EbpfEntryDataForSpan.resp_headers:type_name -> opentelemetry.proto.common.v1.KeyValueList
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ebpf_entry_proto_init() }
func file_ebpf_entry_proto_init() {
	if File_ebpf_entry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ebpf_entry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EbpfEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ebpf_entry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EbpfEntryDataForSpan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ebpf_entry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ebpf_entry_proto_goTypes,
		DependencyIndexes: file_ebpf_entry_proto_depIdxs,
		MessageInfos:      file_ebpf_entry_proto_msgTypes,
	}.Build()
	File_ebpf_entry_proto = out.File
	file_ebpf_entry_proto_rawDesc = nil
	file_ebpf_entry_proto_goTypes = nil
	file_ebpf_entry_proto_depIdxs = nil
}
